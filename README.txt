pyramid_restler
===============

Overview
--------

This package implements a somewhat-opinionated RESTful system on top of the
Pyramid Web framework. Essentially, it maps HTTP requests to Pyramid views,
which interact with model entities via a uniform context interface and then
respond with appropriate status codes and entity representations.

Routes
~~~~~~

A Pyramid configuration directive is provided that makes generating the various
routes for an entity easy::

    config.add_restful_routes('thing', ThingModel)

This generates routes similar to those generated by `Mapper.resource` in the
Routes package. They are also similar to Rails' resource routes.

Views
~~~~~

RESTful views are implemented as a standard set of methods in view classes.
There is an interface describing how such classes should be implemented. A
default view class is provided, which should be sufficient for many
applications.

These view classes are similar to those generated by Pylons' restcontroller
paster template, which are similar to the RESTful controllers in a Rails
application.

Model
~~~~~

Views interact with a context, which is a wrapper around some kind of back end
model entity. A common example of such an entity is a SQLAlchemy ORM class; a
SQLAlchemy ORM context class is provided.

The purpose of the context layer is to provide a uniform interface to any kind
of back end model. This way, the view layer can be written in a generic manner.
This design also helps to keep concerns appropriately separated: the view layer
should handle parsing HTTP requests and generating HTTP responses; the context
layer should handle interacting with and coverting data from the model.

More Info
~~~~~~~~~

See http://packages.python.org/pyramid_restler/ for detailed documentation
of interfaces, APIs, and usage.

License
-------

This package is provided under the MIT license. See the LICENSE.txt or
http://www.opensource.org/licenses/MIT for details.
